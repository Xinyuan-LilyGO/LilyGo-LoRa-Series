;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct
; !!!! During platformio.ini debugging, not sure whether the settings are correct

[platformio]

; default_envs = T3_V1_6_SX1276_TCXO            ; Not support LoRaWAN , Production has stopped


; default_envs = T3_V1_3_SX1276
; default_envs = T3_V1_3_SX1278

; default_envs = T3_V1_6_SX1276
; default_envs = T3_V1_6_SX1278

; default_envs = T_BEAM_SX1262
; default_envs = T_BEAM_SX1276
; default_envs = T_BEAM_SX1278
; default_envs = T_BEAM_LR1121

; default_envs = T_MOTION
; default_envs = T_BEAM_S3_SUPREME_SX1262
; default_envs = T_BEAM_S3_SUPREME_LR1121

; ! T3-S3 v1.3 Same T3-S3 v1.2
; default_envs = T3_S3_V1_2_SX1262
; default_envs = T3_S3_V1_2_SX1276
; default_envs = T3_S3_V1_2_SX1278
; default_envs = T3_S3_V1_2_SX1280
; default_envs = T3_S3_V1_2_SX1280_PA
; default_envs = T3_S3_V1_2_LR1121

; default_envs = T3_C6_SX1262

default_envs =  T3_V3_0_SX1276_TCXO
; default_envs =  T3_V3_0_SX1278
; default_envs =  T3_V3_0_SX1262
; default_envs =  T3_V3_0_LR1121
; default_envs = T_Beam_BPF

; default_envs = T_BEAM_2W_868M
; default_envs = T_BEAM_2W_915M

; !!!! EXAMPLES !!!! EXAMPLES !!!! EXAMPLES

; ! OLED examples just only support T_BEAM_S3_SUPREME or T_BEAM
; src_dir = examples/OLED/SH1106FontUsage
; src_dir = examples/OLED/SH1106GraphicsTest
; src_dir = examples/OLED/SH1106IconMenu
; src_dir = examples/OLED/SH1106PrintUTF8
; src_dir = examples/OLED/SSD1306SimpleDemo
; src_dir = examples/OLED/SSD1306UiDemo

; ! Display examples just only support  T_BEAM display shield
; src_dir = examples/Display/Free_Font_Demo
; src_dir = examples/Display/TBeam_TFT_Shield
; src_dir = examples/Display/TFT_Char_times
; src_dir = examples/Display/UTFT_demo

; ! GPS examples just only support T_BEAM_S3_SUPREME or T_BEAM
; src_dir = examples/GPS/TinyGPS_Example
; src_dir = examples/GPS/TinyGPS_FullExample
; src_dir = examples/GPS/TinyGPS_KitchenSink
; src_dir = examples/GPS/UBlox_BasicNMEARead
; src_dir = examples/GPS/UBlox_NMEAParsing
; src_dir = examples/GPS/UBlox_OutputRate
; src_dir = examples/GPS/UBlox_Recovery


; ! PMU examples just only support T_BEAM_S3_SUPREME or T_BEAM
; src_dir = examples/PMU

; ! Radio examples suitable for all boards
; src_dir = examples/ArduinoLoRa/LoRaReceiver
src_dir = examples/ArduinoLoRa/LoRaSender
; src_dir = examples/RadioLibExamples/Receive_Interrupt
; src_dir = examples/RadioLibExamples/Transmit_Interrupt
; src_dir = examples/RadioLibExamples/SX1280_Ranging

; ! SX1280 Ranging examples just only support T3_S3_V1_2_SX1280 or T3_S3_V1_2_SX1280_PA
; ! Using open source code, no guarantee of accuracy
; src_dir = examples/RadioLibExamples/SX1280/Ranging_Master
; src_dir = examples/RadioLibExamples/SX1280/Ranging_Slave

; ! LMIC_Library_OTTA only support SX1276 radio model , other model and T3_V1_6_SX1276_TCXO not support
; src_dir = examples/LoRaWAN/LMIC_Library_OTTA

; ! RadioLib_OTAA only support all radio model , not support T3_V1_6_SX1276_TCXO 
; src_dir = examples/LoRaWAN/RadioLib_OTAA
; src_dir = examples/LoRaWAN/LoRaWAN_ABP

; ! Sensor examples just only support T_BEAM_S3_SUPREME
; src_dir = examples/Sensor/BME280_AdvancedsettingsExample
; src_dir = examples/Sensor/BME280_TestExample
; src_dir = examples/Sensor/BME280_UnifiedExample
; src_dir = examples/Sensor/PCF8563_AlarmByUnits
; src_dir = examples/Sensor/PCF8563_SimpleTime
; src_dir = examples/Sensor/PCF8563_TimeLib
; src_dir = examples/Sensor/PCF8563_TimeSynchronization
; src_dir = examples/Sensor/QMC6310_CalibrateExample
; src_dir = examples/Sensor/QMC6310_CompassExample
; src_dir = examples/Sensor/QMC6310_GetDataExample
; src_dir = examples/Sensor/QMC6310_GetPolarExample
; src_dir = examples/Sensor/QMI8658_BlockExample
; src_dir = examples/Sensor/QMI8658_GetDataExample
; src_dir = examples/Sensor/QMI8658_InterruptBlockExample
; src_dir = examples/Sensor/QMI8658_InterruptExample
; src_dir = examples/Sensor/QMI8658_LockingMechanismExample
; src_dir = examples/Sensor/QMI8658_MadgwickAHRS
; src_dir = examples/Sensor/QMI8658_PedometerExample
; src_dir = examples/Sensor/QMI8658_ReadFromFifoExample
; src_dir = examples/Sensor/QMI8658_WakeOnMotion

; ! T3 factory examples just only support T3_S3
; src_dir = examples/T3S3Factory

; src_dir = examples/TBeamFactory



; src_dir = examples/Factory

boards_dir = boards

[env]
platform = espressif32@6.9.0
framework = arduino
upload_speed =  921600
monitor_speed = 115200
monitor_filters =
	default
	esp32_exception_decoder


    
[esp32_base]
build_flags =
    ${env.build_flags}

[esp32s3_base]
build_flags =
    ${env.build_flags}
    -DARDUINO_USB_CDC_ON_BOOT=1
    ; -UARDUINO_USB_CDC_ON_BOOT
    -DCORE_DEBUG_LEVEL=0

[env:T3_V1_3_SX1276]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V1_3_SX1276

[env:T3_V1_3_SX1278]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V1_3_SX1278

[env:T3_V1_6_SX1276]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V1_6_SX1276

[env:T3_V1_6_SX1278]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V1_6_SX1278

[env:T3_V1_6_SX1276_TCXO]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V1_6_SX1276_TCXO

[env:T3_V3_0_SX1276_TCXO]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V3_0
    -DUSING_SX1276

[env:T3_V3_0_SX1278]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V3_0
    -DUSING_SX1278

[env:T3_V3_0_SX1262]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V3_0
    -DUSING_SX1262

[env:T3_V3_0_LR1121]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT3_V3_0
    -DUSING_LR1121

[env:T_BEAM_SX1262]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT_BEAM_SX1262
    -mfix-esp32-psram-cache-issue
    -DBOARD_HAS_PSRAM
board_build.partitions = huge_app.csv 

[env:T_BEAM_SX1276]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT_BEAM_SX1276
    -mfix-esp32-psram-cache-issue
    -DBOARD_HAS_PSRAM
board_build.partitions = huge_app.csv 

[env:T_BEAM_SX1278]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT_BEAM_SX1278
    -mfix-esp32-psram-cache-issue
    -DBOARD_HAS_PSRAM
board_build.partitions = huge_app.csv 

[env:T_BEAM_LR1121]
board = esp32dev
build_flags = ${esp32_base.build_flags}
    -DT_BEAM_LR1121
    -mfix-esp32-psram-cache-issue
    -DBOARD_HAS_PSRAM

[env:T_BEAM_S3_SUPREME_SX1262]
board = t-beams3-supreme
build_flags = ${esp32s3_base.build_flags}
    -DT_BEAM_S3_SUPREME_SX1262
    -DBOARD_HAS_PSRAM
board_build.partitions = huge_app.csv 

[env:T_BEAM_S3_SUPREME_LR1121]
board = t-beams3-supreme
build_flags = ${esp32s3_base.build_flags}
    -DT_BEAM_S3_SUPREME_LR1121
    -DBOARD_HAS_PSRAM
board_build.partitions = huge_app.csv 

[env:T3_S3_V1_2_SX1262]
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_SX1262

[env:T3_S3_V1_2_SX1276]
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_SX1276

[env:T3_S3_V1_2_SX1278]
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_SX1278

[env:T3_S3_V1_2_SX1280]
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_SX1280

[env:T3_S3_V1_2_SX1280_PA]
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_SX1280_PA

[env:T3_S3_V1_2_LR1121]
extends = env
board = t3_s3_v1_x
build_flags = ${esp32s3_base.build_flags}
    -DT3_S3_V1_2_LR1121

[env:T_MOTION]
platform = ststm32
framework = arduino
board = nucleo_l073rz
upload_protocol = dfu
build_flags =
    -DPIO_FRAMEWORK_ARDUINO_ENABLE_CDC
	-DUSBCON
    -DT_MOTION_S76G

; TODO: platformio not support esp32c6 yet
; [env:T3_C6]
; board = esp32-c6-devkitc-1
; build_flags = 
;     -DT3_C6

[env:T_Beam_BPF]
extends = env
board = ESP32-S3-WROOM-1-N16R8
build_flags = ${esp32s3_base.build_flags}
    -DT_BEAM_S3_BPF
    -USING_SX1278
    -DCONFIG_RADIO_FREQ=144.0


[env:T_BEAM_2W_868M]
extends = env
board = ESP32-S3-WROOM-1-N16R8
build_flags = ${esp32s3_base.build_flags}
    -DCONFIG_RADIO_FREQ=868.0
    -DT_BEAM_2W

[env:T_BEAM_2W_915M]
extends = env
board = ESP32-S3-WROOM-1-N16R8
build_flags = ${esp32s3_base.build_flags}
    -DCONFIG_RADIO_FREQ=915.0
    -DT_BEAM_2W

